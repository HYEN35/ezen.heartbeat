/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.95
 * Generated at: 2024-11-25 12:51:11 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.heartbeat;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import javax.servlet.http.HttpSession;

public final class notice_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(9);
    _jspx_dependants.put("/WEB-INF/views/popup/pop-pay-artist.jsp", Long.valueOf(1732522992956L));
    _jspx_dependants.put("/WEB-INF/views/popup/pop-delete-user.jsp", Long.valueOf(1732522992956L));
    _jspx_dependants.put("/WEB-INF/views/popup/pop-pay-streaming.jsp", Long.valueOf(1732522992956L));
    _jspx_dependants.put("jar:file:/C:/Users/kim/.m2/repository/javax/servlet/jstl/1.2/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/views/popup/pop-alert-check.jsp", Long.valueOf(1732522992956L));
    _jspx_dependants.put("/WEB-INF/views/include/layout.jsp", Long.valueOf(1732522992956L));
    _jspx_dependants.put("/WEB-INF/views/include/menu.jsp", Long.valueOf(1732522992956L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1729867057530L));
    _jspx_dependants.put("jar:file:/C:/Users/kim/.m2/repository/javax/servlet/jstl/1.2/jstl-1.2.jar!/META-INF/fmt.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(2);
    _jspx_imports_classes.add("javax.servlet.http.HttpSession");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fend_005fbegin;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fend_005fbegin = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fend_005fbegin.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	request.setCharacterEncoding("UTF-8");

    String pageName = (String) request.getAttribute("pageName");
    String pageTitle = (String) request.getAttribute("pageTitle");
	String pageRequest = request.getRequestURI();

	if (pageRequest.endsWith("index.jsp")) pageName = "HeartBeat";
	else if (pageRequest.endsWith("Web/login.jsp")) pageName = "로그인 - HeartBeat";
	else if (pageRequest.endsWith("join.jsp")) pageName = "회원가입 - HeartBeat";
	
	else if (pageRequest.endsWith("chart.jsp")){
		pageName = "차트 - HeartBeat";
		pageTitle = "차트";
	}
	else if (pageRequest.endsWith("playlist.jsp")) {
		pageName = "플레이리스트 - HeartBeat";
		pageTitle = "플레이리스트";
	}
	else if (pageRequest.endsWith("community.jsp")) {
		pageName = "커뮤니티 - HeartBeat";
		pageTitle = "커뮤니티";
	}
	else if (pageRequest.endsWith("membership.jsp")) {
		pageName = "멤버십 - HeartBeat";
		pageTitle = "멤버십";
	}
	else if (pageRequest.endsWith("mypage.jsp")) {
		pageName = "마이페이지 - HeartBeat";
		pageTitle = "마이페이지";
	}
	
	else if (pageRequest.endsWith("artist/newjeans.jsp")) {
		pageName = "뉴진스";
		pageTitle = "뉴진스";
	}
	
	else if (pageRequest.endsWith("admin/login.jsp")) {
		pageName = "관리자 로그인";
		pageTitle = "관리자 로그인";
	}

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("	<title>");
      out.print(pageName );
      out.write("</title>\r\n");
      out.write("	<meta charset=\"utf-8\">\r\n");
      out.write("	<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=0\">\r\n");
      out.write("	<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("	<meta name=\"title\" content=\"HeartBeat\">\r\n");
      out.write("	<meta name=\"description\" content=\"당신의 심장을 뛰게 하는 음악 사이트, It makes your HeartBeat\">\r\n");
      out.write("	<meta name=\"keywords\" content=\"HeartBeat,음악스트리밍,음악검색,음악듣기,팬커뮤니티,팬소통,팬소통앱,팬커뮤니티소통앱\">\r\n");
      out.write("	<meta name=\"og:title\" content=\"HeartBeat\">\r\n");
      out.write("	<meta name=\"og:url\" content=\"heartbeat.kr/\">\r\n");
      out.write("	<meta name=\"og:site_name\" content=\"HeartBeat\">\r\n");
      out.write("	<meta name=\"og:description\" content=\"당신의 심장을 뛰게 하는 음악 사이트, It makes your HeartBeat\">\r\n");
      out.write("	<meta name=\"og:image\" content=\"#none\">\r\n");
      out.write("	<link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/img/favicon.ico\">\r\n");
      out.write("	<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/css/reset.css\">\r\n");
      out.write("	<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/css/font.css\">\r\n");
      out.write("	<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/css/common.css\">\r\n");
      out.write("	<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/css/style.css\">\r\n");
      out.write("	<script src=\"https://kit.fontawesome.com/dda279453f.js\"></script>\r\n");
      out.write("	<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/js/vendor/jquery-1.12.4.min.js\"></script>\r\n");
      out.write("	<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/js/common.js\"></script>\r\n");
      out.write("</head>");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("	<script>\r\n");
      out.write("	$(function(){\r\n");
      out.write("		\r\n");
      out.write("		$('#search-btn').click(function(){\r\n");
      out.write("			var searchType = $('#searchType').val();\r\n");
      out.write("			var keyword = $('#keyword').val();				\r\n");
      out.write("			location.href=\"/notice/notice?num=1&searchType=\"+searchType+\"&keyword=\"+keyword;\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("	});\r\n");
      out.write("	</script>\r\n");
      out.write("	<div>\r\n");
      out.write("\r\n");
      out.write("		<div class=\"inner service mypage\" data-name=\"mypage\">\r\n");
      out.write("			");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	String menuPageRequest = request.getRequestURI();
	
	String chart = menuPageRequest.endsWith("chart.jsp") ? "on" : "";
	String playlist = menuPageRequest.endsWith("playlist.jsp") ? "on" : "";
	String community = menuPageRequest.endsWith("community.jsp") ? "on" : "";
	String membership =	menuPageRequest.endsWith("membership.jsp") ? "on" : "";
	String mypage =	menuPageRequest.endsWith("mypage.jsp") ? "on" : "";
	
	

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div id=\"menu\" class=\"menu\">\r\n");
      out.write("	<div class=\"wrap\">\r\n");
      out.write("		<h1 class=\"logo\"><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/chart\">HeartBeat</a></h1>\r\n");
      out.write("		<div class=\"userCnt\">\r\n");
      out.write("			<div class=\"user\" onclick=\"dropMenuShow();\">\r\n");
      out.write("				<div class=\"image\"><img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/img/profile/user.png\" onerror=this.src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/img/user.png\" alt=\"닉네임\"></div>\r\n");
      out.write("				<div class=\"name\"><p>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${UserVO.nickname }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</p></div>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"dropMenu\">\r\n");
      out.write("			<a href=\"/logout\" class=\"btn-under-02\">로그아웃</a>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"menuCnt\">\r\n");
      out.write("			<ul>\r\n");
      out.write("				<li class=\"item\">\r\n");
      out.write("					<a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/chart\" class=\"");
      out.print(chart );
      out.write("\"><i class=\"fa-brands fa-spotify\"></i>차트</a>\r\n");
      out.write("				</li>\r\n");
      out.write("				<li class=\"item\">\r\n");
      out.write("					<a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/playlist\" class=\"");
      out.print(playlist );
      out.write("\"><i class=\"fa-solid fa-icons\"></i>플레이리스트</a>\r\n");
      out.write("				</li>\r\n");
      out.write("				<li class=\"item\">\r\n");
      out.write("					<a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/community/community?email=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${UserVO.email}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" class=\"");
      out.print(community );
      out.write(' ');
      out.print("artist".equals(request.getAttribute("artistPage")) ? "on" : "" );
      out.write("\"><i class=\"fa-solid fa-comment\"></i>커뮤니티</a>\r\n");
      out.write("				</li>\r\n");
      out.write("				<li class=\"item\">\r\n");
      out.write("					<a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/membership\" class=\"");
      out.print(membership );
      out.write("\"><i class=\"fa-solid fa-credit-card\"></i>멤버십</a>\r\n");
      out.write("				</li>\r\n");
      out.write("				<li class=\"item\">\r\n");
      out.write("					<a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/notice/notice?num=1\" class=\"");
      out.print(mypage );
      out.write("\"><i class=\"fa-solid fa-user-pen\"></i>공지 및 문의</a>\r\n");
      out.write("				</li>\r\n");
      out.write("				<li class=\"item\">\r\n");
      out.write("					<a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/mypage\" class=\"");
      out.print(mypage );
      out.write("\"><i class=\"fa-solid fa-user-pen\"></i>마이페이지</a>\r\n");
      out.write("				</li>\r\n");
      out.write("			</ul>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("</div>");
      out.write("\r\n");
      out.write("\r\n");
      out.write("			<div class=\"container\">\r\n");
      out.write("				<div class=\"cntWrap\">\r\n");
      out.write("					<h2 id=\"title\" class=\"title\">");
      out.print(pageTitle);
      out.write("</h2>\r\n");
      out.write("					<div class=\"cntArea\">\r\n");
      out.write("						<div class=\"tabBtn\">\r\n");
      out.write("							<ul>\r\n");
      out.write("								<li data-tab=\"tab-post\" class=\"tab\">작성글 확인</li>\r\n");
      out.write("							</ul>\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"tabCnt\">\r\n");
      out.write("							<div class=\"cnt\">\r\n");
      out.write("								<div class=\"searchWrap\">\r\n");
      out.write("									<div class=\"searchBx\">\r\n");
      out.write("										<select name=\"searchType\" id=\"searchType\" class=\"sltBx\">\r\n");
      out.write("											<option value=\"title\">제목</optoin>\r\n");
      out.write("											<option value=\"nickname\">작성자</optoin>\r\n");
      out.write("											<option value=\"content\">내용</optoin>\r\n");
      out.write("										</select> \r\n");
      out.write("										<input type=\"search\" name=\"keyword\" id=\"keyword\" class=\"txtBx\" placeholder=\"검색어 입력\">\r\n");
      out.write("										<button id=\"search-btn\" type=\"button\" class=\"btn-border\">검색</button>\r\n");
      out.write("									</div>\r\n");
      out.write("									<div class=\"btnBx\">\r\n");
      out.write("										<a href=\"/notice/postNotice\" class=\"btn-full\">작성</a>\r\n");
      out.write("									</div>\r\n");
      out.write("								</div>\r\n");
      out.write("								<ul class=\"itemWrap\">\r\n");
      out.write("									");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("									\r\n");
      out.write("									");
      if (_jspx_meth_c_005fforEach_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("								</ul>\r\n");
      out.write("								<div class=\"pagination\">\r\n");
      out.write("									");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("									<div class=\"page\">\r\n");
      out.write("										");
      if (_jspx_meth_c_005fforEach_005f2(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("									</div>\r\n");
      out.write("									");
      if (_jspx_meth_c_005fif_005f3(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("								</div>\r\n");
      out.write("							</div>\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("		<div class=\"dimmed\" onclick=\"popAlertCheckHide()\"></div>\r\n");
      out.write("		<div class=\"dimmed\" onclick=\"popDeleteUserHide();\"></div>\r\n");
      out.write("		<div class=\"dimmed\" onclick=\"payhide();\"></div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("		<!-- [D] 팝업 중복확인 -->\r\n");
      out.write("		<div class=\"popup pop-alert-check\">");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"wrap\">\r\n");
      out.write("	<div class=\"topArea\">\r\n");
      out.write("		<div class=\"title\">중복확인</div>\r\n");
      out.write("		<button type=\"button\" class=\"btn-i-close\" onclick=\"popAlertCheckHide();\"></button>\r\n");
      out.write("	</div>\r\n");
      out.write("	<div class=\"cntArea\">\r\n");
      out.write("		<div class=\"messageBx\">\r\n");
      out.write("			<p class=\"msg\"></p>\r\n");
      out.write("			<button type=\"button\" class=\"btn-full\" onclick=\"popAlertCheckHide();\">확인</button>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("</div>");
      out.write("</div>\r\n");
      out.write("		<!-- [D] 팝업 회원 탈퇴 -->\r\n");
      out.write("		<div class=\"popup pop-delete-user\">");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("	function validityCheck() {\r\n");
      out.write("		if(document.deleteFrm.pwd.value != document.deleteFrm.pwdCheck.value) {\r\n");
      out.write("			alert(\"입력한 비밀번호가 서로 일치하지 않습니다. 다시 확인해주세요.\");\r\n");
      out.write("			document.deleteFrm.pwd.focus();\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		document.deleteFrm.submit();\r\n");
      out.write("	}\r\n");
      out.write("</script>\r\n");
      out.write("<div class=\"wrap\">\r\n");
      out.write("	<div class=\"topArea\">\r\n");
      out.write("		<div class=\"title\">회원 탈퇴</div>\r\n");
      out.write("	</div>\r\n");
      out.write("	<div class=\"cntArea\">\r\n");
      out.write("		<form action=\"/mypage/delete\" method=\"post\" name=\"deleteFrm\" autocomplete=\"off\" >\r\n");
      out.write("			<div class=\"listBx\">\r\n");
      out.write("				<input type=\"text\" name=\"email\" class=\"txtBx\" placeholder=\"이메일 입력\">\r\n");
      out.write("				<input type=\"password\" name=\"pwd\" class=\"txtBx\" placeholder=\"비밀번호 입력\">\r\n");
      out.write("				<input type=\"password\" name=\"pwdCheck\" class=\"txtBx\" placeholder=\"비밀번호 확인\">\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"btnBx\">\r\n");
      out.write("				<button type=\"button\" class=\"btn-border\" onclick=\"validityCheck()\">탈퇴하기</button>\r\n");
      out.write("				<button type=\"button\" class=\"btn-full\" onclick=\"popDeleteUserHide();\">닫기</button>\r\n");
      out.write("			</div>\r\n");
      out.write("		</form>\r\n");
      out.write("	</div>\r\n");
      out.write("</div>");
      out.write("</div>\r\n");
      out.write("		<div class=\"popup pop-pay artist\">");
      out.write("\r\n");
      out.write("<script src=\"https://cdn.iamport.kr/v1/iamport.js\"></script>\r\n");
      out.write("<script src=\"https://cdn.portone.io/js/portone.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("	\r\n");
      out.write("    // 사용자 이메일과 이름을 서버에서 JSP로 전달받아 변수로 설정합니다.\r\n");
      out.write("    var email = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${UserVO.email}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"; \r\n");
      out.write("    var name = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${UserVO.name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"; \r\n");
      out.write("    var phone = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${UserVO.phone}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("\r\n");
      out.write("    // 엑세스 토큰을 서버에서 받아오는 함수\r\n");
      out.write("    function getAccessToken() {\r\n");
      out.write("	    return new Promise((resolve, reject) => {\r\n");
      out.write("	        $.ajax({\r\n");
      out.write("	            url: '/getAccessToken',  // 서버에서 엑세스 토큰을 반환하는 엔드포인트\r\n");
      out.write("	            type: 'GET',\r\n");
      out.write("	            success: function(response) {\r\n");
      out.write("	                console.log('Response:', response); // 응답 내용을 로그로 출력해 응답 형식 확인\r\n");
      out.write("	                if (response && response) {\r\n");
      out.write("	                    resolve(response);  // 엑세스 토큰 반환\r\n");
      out.write("	                } else {\r\n");
      out.write("	                    reject(\"엑세스 토큰을 받을 수 없습니다1.\");\r\n");
      out.write("	                }\r\n");
      out.write("	            },\r\n");
      out.write("	            error: function(xhr, status, error) {\r\n");
      out.write("	                reject(\"엑세스 토큰 요청에 실패했습니다: \" + error);\r\n");
      out.write("	            }\r\n");
      out.write("	        });\r\n");
      out.write("	    });\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("    // 고유한 결제 ID 생성\r\n");
      out.write("    function makeMerchantUid() {\r\n");
      out.write("        return \"IMP\" + crypto.randomUUID();\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    function atristkakaoPay() {\r\n");
      out.write("    	// select 박스에서 선택된 값 가져오기\r\n");
      out.write("        var selectedArtist = document.getElementById('artistSelect').value;\r\n");
      out.write("        if (confirm(\"구매 하시겠습니까?\")) { \r\n");
      out.write("            getAccessToken().then(function(accessToken) {\r\n");
      out.write("                if (accessToken) {\r\n");
      out.write("                    IMP.init(\"imp72743015\");  // 아이엠포트 가맹점 식별 코드\r\n");
      out.write("\r\n");
      out.write("                    IMP.request_pay({\r\n");
      out.write("                        pg: 'kakaopay.TC0ONETIME',  // 카카오페이 결제 방식\r\n");
      out.write("                        pay_method: 'card',         // 결제 방식 (카드 결제)\r\n");
      out.write("                        merchant_uid: makeMerchantUid(),  // 고유 결제 ID\r\n");
      out.write("                        custom_data : selectedArtist,\r\n");
      out.write("                        name: '스트리밍 + '+selectedArtist+' 구독권(1개월)',              // 상품명\r\n");
      out.write("                        amount: 6900,               // 결제 금액\r\n");
      out.write("                        buyer_email: email,         // 구매자 이메일\r\n");
      out.write("                        buyer_name: name,           // 구매자 이름\r\n");
      out.write("                        buyer_tel : phone,			// 구매자 번호 \r\n");
      out.write("                        access_token: accessToken   // 엑세스 토큰 추가\r\n");
      out.write("                    }, function(rsp) {\r\n");
      out.write("                        console.log(rsp.status);  // 결제 응답 객체 출력\r\n");
      out.write("                        console.log(rsp.approvalRedirectParams);  // 결제 응답 객체 출력\r\n");
      out.write("                        console.log(rsp.pgToken);  // 결제 응답 객체 출력\r\n");
      out.write("                        if (rsp.success) {\r\n");
      out.write("                            console.log(\"결제 성공:\", rsp);\r\n");
      out.write("                            // 결제 성공 시 처리 함수 호출\r\n");
      out.write("                            artistPaymentSuccess(rsp); \r\n");
      out.write("                        } else {\r\n");
      out.write("                            alert(rsp.error_msg);  // 결제 실패 시 에러 메시지 출력\r\n");
      out.write("                        }\r\n");
      out.write("                    });\r\n");
      out.write("                } \r\n");
      out.write("            })\r\n");
      out.write("        } else {\r\n");
      out.write("            return false;  // 구매 취소\r\n");
      out.write("        }\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    // 결제 성공 처리 함수\r\n");
      out.write("    function artistPaymentSuccess(rsp) {\r\n");
      out.write("\r\n");
      out.write("        // 결제 정보 서버로 전송 (AJAX 요청)\r\n");
      out.write("        $.ajax({\r\n");
      out.write("            type: 'POST',\r\n");
      out.write("            url: '/membership/artistPay',  // 결제 정보 처리 서버 URL\r\n");
      out.write("            contentType: 'application/json',\r\n");
      out.write("            data: JSON.stringify({\r\n");
      out.write("            	custom_data : rsp.custom_data,\r\n");
      out.write("                merchant_uid: rsp.merchant_uid,\r\n");
      out.write("                amount: rsp.paid_amount,\r\n");
      out.write("                buyer_email: rsp.buyer_email,\r\n");
      out.write("                buyer_name: rsp.buyer_name,\r\n");
      out.write("                level : 2,\r\n");
      out.write("                \r\n");
      out.write("            }),\r\n");
      out.write("            success: function(data) {\r\n");
      out.write("                    \r\n");
      out.write("                } \r\n");
      out.write("            }),\r\n");
      out.write("            \r\n");
      out.write("            alert('결제가 완료되었습니다.');\r\n");
      out.write("            payhide(); // 결제 완료 후 팝업 닫기\r\n");
      out.write("            window.location.reload();  // 페이지 새로고침\r\n");
      out.write("        };\r\n");
      out.write("    \r\n");
      out.write("		\r\n");
      out.write("        function atristNicePay() {\r\n");
      out.write("            // 결제 전 확인 창\r\n");
      out.write("            if (confirm(\"구매 하시겠습니까?\")) {\r\n");
      out.write("                getAccessToken().then(function(accessToken) {\r\n");
      out.write("                    var selectedArtist = document.getElementById('artistSelect').value;\r\n");
      out.write("                    if (accessToken) {\r\n");
      out.write("                        IMP.init(\"imp72743015\");  // 아이엠포트 가맹점 식별 코드\r\n");
      out.write("\r\n");
      out.write("                        // 결제 요청\r\n");
      out.write("                        var transactionId = generateUniqueTransactionId();  // 고유 TID 생성 (서버에서 처리)\r\n");
      out.write("\r\n");
      out.write("                        IMP.request_pay({\r\n");
      out.write("                        	pg : 'nice_v2',\r\n");
      out.write("                            storeId: \"store-d6a10a43-829f-4a33-bf02-a85ce1acbcf4\",  // 고객사 storeId\r\n");
      out.write("                            paymentId: transactionId,  // 결제 ID (고유한 TID로 변경)\r\n");
      out.write("                            name: '스트리밍 + ' + selectedArtist + ' 구독권(1개월)',  // 상품명\r\n");
      out.write("                            amount: 6900,  // 결제 금액\r\n");
      out.write("                            custom_data: selectedArtist,\r\n");
      out.write("                            currency: \"CURRENCY_KRW\",  // 통화 설정\r\n");
      out.write("                            channelKey: \"channel-key-bb343318-fb81-4bd2-b9b1-aa96b8a14a3a\",  // 채널 키\r\n");
      out.write("                            payMethod: \"CARD\",  // 결제 방식 (카드)\r\n");
      out.write("                            buyer_email: email,  // 구매자 이메일\r\n");
      out.write("                            buyer_name: name,    // 구매자 이름\r\n");
      out.write("                            buyer_tel: phone,    // 구매자 전화번호\r\n");
      out.write("                            level: 2,            // 사용자 레벨\r\n");
      out.write("                            TID: transactionId  // 고유한 TID 생성 (결제 트랜잭션 ID)\r\n");
      out.write("                        }, function(rsp) {\r\n");
      out.write("                            // 결제 응답 성공 시 처리\r\n");
      out.write("                            if (rsp.error_msg) {\r\n");
      out.write("                                alert('결제가 취소되었습니다.');  // 결제 취소 알림\r\n");
      out.write("                                console.log(\"결제 실패:\", rsp);\r\n");
      out.write("                                payhide();  // 결제 팝업 숨기기\r\n");
      out.write("                            } else {\r\n");
      out.write("                                artistNicePaySuccess(rsp, selectedArtist);  // 결제 성공 처리 함수 호출\r\n");
      out.write("                                console.log(\"결제 성공:\", rsp);\r\n");
      out.write("                            }\r\n");
      out.write("                        });\r\n");
      out.write("                    }\r\n");
      out.write("                });\r\n");
      out.write("            } else {\r\n");
      out.write("                return false;  // 사용자가 구매를 취소한 경우\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // 서버 측에서 TID 생성 함수 (예시)\r\n");
      out.write("        function generateUniqueTransactionId() {\r\n");
      out.write("            // 서버에서 관리되는 고유 ID 생성 로직\r\n");
      out.write("            return 'TID-' + new Date().getTime();  // 예시로 현재 시간을 기반으로 TID 생성\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        function artistNicePaySuccess(rsp, selectedArtist) {\r\n");
      out.write("            console.log(\"결제 성공 후 처리:\", selectedArtist);\r\n");
      out.write("            // 결제 결과를 서버로 전송 (AJAX 요청)\r\n");
      out.write("            $.ajax({\r\n");
      out.write("                type: 'POST',\r\n");
      out.write("                url: '/membership/artistPay',  // 결제 정보 처리 서버 URL\r\n");
      out.write("                contentType: 'application/json',\r\n");
      out.write("                data: JSON.stringify({\r\n");
      out.write("                    custom_data: selectedArtist,\r\n");
      out.write("                    amount: 6900,\r\n");
      out.write("                    buyer_email: email,\r\n");
      out.write("                    buyer_name: name,\r\n");
      out.write("                    level: 2\r\n");
      out.write("                }),\r\n");
      out.write("                success: function(data) {\r\n");
      out.write("                    alert('결제가 완료되었습니다.');\r\n");
      out.write("                    payhide(); // 결제 완료 후 팝업 닫기\r\n");
      out.write("                    window.location.reload();  // 페이지 새로고침\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<div class=\"wrap\">\r\n");
      out.write("	<div class=\"topArea\">\r\n");
      out.write("		<div class=\"title\">멤버십 결제</div>\r\n");
      out.write("		<button type=\"button\" class=\"btn-i-close\" onclick=\"payhide();\"></button>\r\n");
      out.write("	</div>\r\n");
      out.write("	<div class=\"cntArea\">\r\n");
      out.write("		<div class=\"infoWrap\">\r\n");
      out.write("			<i>구독 아티스트 선택</i>\r\n");
      out.write("			<select class=\"sltBx\" id=\"artistSelect\">\r\n");
      out.write("				<option value=\"aespa\">AESPA</option>\r\n");
      out.write("				<option value=\"BLACKPINK\">BLACKPINK</option>\r\n");
      out.write("				<option value=\"bts\">BTS</option>\r\n");
      out.write("				<option value=\"ive\">IVE</option>\r\n");
      out.write("				<option value=\"ITZY\">ITZY</option>\r\n");
      out.write("				<option value=\"NewJeans\">NewJeans</option>\r\n");
      out.write("				<option value=\"nct127\">NCT-127</option>\r\n");
      out.write("				<option value=\"nctdream\">NCT-DREAM</option>\r\n");
      out.write("				<option value=\"seventeen\">SEVENTEEN</option>\r\n");
      out.write("			</select>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"btnWrap\">\r\n");
      out.write("			<input type=\"button\" class=\"btn-pay-naver\" onclick=\"atristNicePay()\" value=\"일반 결제 버튼\">\r\n");
      out.write("			<input type=\"button\" class=\"btn-pay-kakao\" onclick=\"atristkakaoPay()\" value=\"카카오페이 결제 버튼\">\r\n");
      out.write("			<a href=\"#none\" class=\"btn-pay-toss\"></a>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<!--  <div class=\"wrap\">\r\n");
      out.write("    <div>결제 페이지</div>\r\n");
      out.write("    <div>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${UserVO.email }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</div>\r\n");
      out.write("    <input type=\"button\" id=\"naverPayBtn\" value=\"네이버페이 결제 버튼\">\r\n");
      out.write("    <input type=\"button\" onclick=\"kakaoPay()\" value=\"카카오페이 결제 버튼\">\r\n");
      out.write("    <input type=\"button\" value=\"토스 결제 버튼\">\r\n");
      out.write("</div>-->");
      out.write("</div>\r\n");
      out.write("		<div class=\"popup pop-pay streaming\">");
      out.write("\r\n");
      out.write("<script src=\"https://nsp.pay.naver.com/sdk/js/naverpay.min.js\"></script>\r\n");
      out.write("<script src=\"https://cdn.iamport.kr/v1/iamport.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("    // 사용자 이메일과 이름을 서버에서 JSP로 전달받아 변수로 설정합니다.\r\n");
      out.write("    var email = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${UserVO.email}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"; \r\n");
      out.write("    var name = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${UserVO.name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"; \r\n");
      out.write("    var phone = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${UserVO.phone}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("\r\n");
      out.write("    // 엑세스 토큰을 서버에서 받아오는 함수\r\n");
      out.write("    function getAccessToken() {\r\n");
      out.write("	    return new Promise((resolve, reject) => {\r\n");
      out.write("	        $.ajax({\r\n");
      out.write("	            url: '/getAccessToken',  // 서버에서 엑세스 토큰을 반환하는 엔드포인트\r\n");
      out.write("	            type: 'GET',\r\n");
      out.write("	            success: function(response) {\r\n");
      out.write("	                console.log('Response:', response); // 응답 내용을 로그로 출력해 응답 형식 확인\r\n");
      out.write("	                if (response && response) {\r\n");
      out.write("	                    resolve(response);  // 엑세스 토큰 반환\r\n");
      out.write("	                } else {\r\n");
      out.write("	                    reject(\"엑세스 토큰을 받을 수 없습니다1.\");\r\n");
      out.write("	                }\r\n");
      out.write("	            },\r\n");
      out.write("	            error: function(xhr, status, error) {\r\n");
      out.write("	                reject(\"엑세스 토큰 요청에 실패했습니다: \" + error);\r\n");
      out.write("	            }\r\n");
      out.write("	        });\r\n");
      out.write("	    });\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("    // 고유한 결제 ID 생성\r\n");
      out.write("    function makeMerchantUid() {\r\n");
      out.write("        return \"IMP\" + crypto.randomUUID();\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    function kakaoPay() {\r\n");
      out.write("    	// select 박스에서 선택된 값 가져오기\r\n");
      out.write("        if (confirm(\"구매 하시겠습니까?\")) { \r\n");
      out.write("            getAccessToken().then(function(accessToken) {\r\n");
      out.write("                if (accessToken) {\r\n");
      out.write("                    IMP.init(\"imp72743015\");  // 아이엠포트 가맹점 식별 코드\r\n");
      out.write("\r\n");
      out.write("                    IMP.request_pay({\r\n");
      out.write("                        pg: 'kakaopay.TC0ONETIME',  // 카카오페이 결제 방식\r\n");
      out.write("                        pay_method: 'card',         // 결제 방식 (카드 결제)\r\n");
      out.write("                        merchant_uid: makeMerchantUid(),  // 고유 결제 ID\r\n");
      out.write("                        name: '스트리밍 구독권(1개월)',  // 상품명\r\n");
      out.write("                        amount: 3900,               // 결제 금액\r\n");
      out.write("                        buyer_email: email,         // 구매자 이메일\r\n");
      out.write("                        buyer_name: name,           // 구매자 이름\r\n");
      out.write("                        buyer_tel : phone,			// 구매자 번호 \r\n");
      out.write("                        access_token: accessToken   // 엑세스 토큰 추가\r\n");
      out.write("                    }, function(rsp) {\r\n");
      out.write("                        console.log(rsp.status);  // 결제 응답 객체 출력\r\n");
      out.write("                        console.log(rsp.approvalRedirectParams);  // 결제 응답 객체 출력\r\n");
      out.write("                        console.log(rsp.pgToken);  // 결제 응답 객체 출력\r\n");
      out.write("                        if (rsp.success) {\r\n");
      out.write("                            console.log(\"결제 성공:\", rsp);\r\n");
      out.write("                            // 결제 성공 시 처리 함수 호출\r\n");
      out.write("                            streamingPaymentSuccess(rsp); \r\n");
      out.write("                        } else {\r\n");
      out.write("                            alert(rsp.error_msg);  // 결제 실패 시 에러 메시지 출력\r\n");
      out.write("                        }\r\n");
      out.write("                    });\r\n");
      out.write("                } \r\n");
      out.write("            })\r\n");
      out.write("        } else {\r\n");
      out.write("            return false;  // 구매 취소\r\n");
      out.write("        }\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    // 결제 성공 처리 함수\r\n");
      out.write("    function streamingPaymentSuccess(rsp) {\r\n");
      out.write("\r\n");
      out.write("        // 결제 정보 서버로 전송 (AJAX 요청)\r\n");
      out.write("        $.ajax({\r\n");
      out.write("            type: 'POST',\r\n");
      out.write("            url: '/membership/streamingPay',  // 결제 정보 처리 서버 URL\r\n");
      out.write("            contentType: 'application/json',\r\n");
      out.write("            data: JSON.stringify({\r\n");
      out.write("            	custom_data : 0,\r\n");
      out.write("                merchant_uid: rsp.merchant_uid,\r\n");
      out.write("                amount: rsp.paid_amount,\r\n");
      out.write("                buyer_email: rsp.buyer_email,\r\n");
      out.write("                buyer_name: rsp.buyer_name,\r\n");
      out.write("                level : 1,\r\n");
      out.write("                \r\n");
      out.write("            }),\r\n");
      out.write("            success: function(data) {\r\n");
      out.write("                    \r\n");
      out.write("                } \r\n");
      out.write("            }),\r\n");
      out.write("            \r\n");
      out.write("            alert('결제가 완료되었습니다.');\r\n");
      out.write("            payhide(); // 결제 완료 후 팝업 닫기\r\n");
      out.write("            window.location.reload();  // 페이지 새로고침\r\n");
      out.write("        };\r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("        function naverPay() {\r\n");
      out.write("        	// select 박스에서 선택된 값 가져오기\r\n");
      out.write("            if (confirm(\"구매 하시겠습니까?\")) { \r\n");
      out.write("                getAccessToken().then(function(accessToken) {\r\n");
      out.write("                    if (accessToken) {\r\n");
      out.write("                        IMP.init(\"imp72743015\");  // 아이엠포트 가맹점 식별 코드\r\n");
      out.write("\r\n");
      out.write("                        IMP.request_pay({\r\n");
      out.write("                            pg: 'kakaopay.TC0ONETIME',  // 카카오페이 결제 방식\r\n");
      out.write("                            pay_method: 'card',         // 결제 방식 (카드 결제)\r\n");
      out.write("                            merchant_uid: makeMerchantUid(),  // 고유 결제 ID\r\n");
      out.write("                            name: '스트리밍 구독권(1개월)',  // 상품명\r\n");
      out.write("                            amount: 3900,               // 결제 금액\r\n");
      out.write("                            buyer_email: email,         // 구매자 이메일\r\n");
      out.write("                            buyer_name: name,           // 구매자 이름\r\n");
      out.write("                            buyer_tel : phone,			// 구매자 번호 \r\n");
      out.write("                            access_token: accessToken   // 엑세스 토큰 추가\r\n");
      out.write("                        }, function(rsp) {\r\n");
      out.write("                            console.log(rsp.status);  // 결제 응답 객체 출력\r\n");
      out.write("                            console.log(rsp.approvalRedirectParams);  // 결제 응답 객체 출력\r\n");
      out.write("                            console.log(rsp.pgToken);  // 결제 응답 객체 출력\r\n");
      out.write("                            if (rsp.success) {\r\n");
      out.write("                                console.log(\"결제 성공:\", rsp);\r\n");
      out.write("                                // 결제 성공 시 처리 함수 호출\r\n");
      out.write("                                streamingPaymentSuccess(rsp); \r\n");
      out.write("                            } else {\r\n");
      out.write("                                alert(rsp.error_msg);  // 결제 실패 시 에러 메시지 출력\r\n");
      out.write("                            }\r\n");
      out.write("                        });\r\n");
      out.write("                    } \r\n");
      out.write("                })\r\n");
      out.write("            } else {\r\n");
      out.write("                return false;  // 구매 취소\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        function nicePay() {\r\n");
      out.write("            // 결제 전 확인 창\r\n");
      out.write("            if (confirm(\"구매 하시겠습니까?\")) {\r\n");
      out.write("                getAccessToken().then(function(accessToken) {\r\n");
      out.write("				var selectedArtist = document.getElementById('artistSelect').value;\r\n");
      out.write("                    if (accessToken) {\r\n");
      out.write("                        IMP.init(\"imp72743015\");  // 아이엠포트 가맹점 식별 코드\r\n");
      out.write("\r\n");
      out.write("                        // 결제 요청\r\n");
      out.write("                        IMP.request_pay({\r\n");
      out.write("                            storeId: \"store-d6a10a43-829f-4a33-bf02-a85ce1acbcf4\",  // 고객사 storeId\r\n");
      out.write("                            paymentId: `payment-");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${crypto.randomUUID()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("`,  // 결제 ID\r\n");
      out.write("                            name: '스트리밍 구독권(1개월)',  // 상품명\r\n");
      out.write("                            amount: 3900,  // 결제 금액\r\n");
      out.write("                            custom_data : selectedArtist,\r\n");
      out.write("                            currency: \"CURRENCY_KRW\",  // 통화 설정\r\n");
      out.write("                            channelKey: \"channel-key-bb343318-fb81-4bd2-b9b1-aa96b8a14a3a\",  // 채널 키\r\n");
      out.write("                            payMethod: \"CARD\",  // 결제 방식 (카드)\r\n");
      out.write("                            custom_data: selectedArtist,  // 선택된 아티스트 정보\r\n");
      out.write("                            buyer_email: email,  // 구매자 이메일\r\n");
      out.write("                            buyer_name: name,    // 구매자 이름\r\n");
      out.write("                            buyer_tel: phone,    // 구매자 전화번호\r\n");
      out.write("                            TID: `TID-");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${crypto.randomUUID()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("`  // 고유한 TID 생성 (결제 트랜잭션 ID)\r\n");
      out.write("                        }, function(rsp) {\r\n");
      out.write("                            // 결제 응답 성공 시 처리\r\n");
      out.write("                                nicePaySuccess(rsp,selectedArtist);  // 결제 성공 처리 함수 호출\r\n");
      out.write("                                console.log(\"결제 성공:\", rsp);\r\n");
      out.write("                        });\r\n");
      out.write("                    }\r\n");
      out.write("                });\r\n");
      out.write("            } else {\r\n");
      out.write("                return false;  // 사용자가 구매를 취소한 경우\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        function nicePaySuccess(rsp,selectedArtist) {\r\n");
      out.write("        	var selectedArtist = selectedArtist;\r\n");
      out.write("        	console.log(selectedArtist);\r\n");
      out.write("            // 결제 결과를 서버로 전송 (AJAX 요청)\r\n");
      out.write("            $.ajax({\r\n");
      out.write("                type: 'POST',\r\n");
      out.write("                url: '/membership/streamingPay',  // 결제 정보 처리 서버 URL\r\n");
      out.write("                contentType: 'application/json',\r\n");
      out.write("                data: JSON.stringify({\r\n");
      out.write("                	custom_data : 0,\r\n");
      out.write("                    amount: 3900,\r\n");
      out.write("                    buyer_email: email,\r\n");
      out.write("                    buyer_name: name,\r\n");
      out.write("                    level: 1\r\n");
      out.write("                }),\r\n");
      out.write("				success: function(data) {\r\n");
      out.write("                    \r\n");
      out.write("                } \r\n");
      out.write("	            }),\r\n");
      out.write("	            \r\n");
      out.write("	            alert('결제가 완료되었습니다.');\r\n");
      out.write("	            payhide(); // 결제 완료 후 팝업 닫기\r\n");
      out.write("	            window.location.reload();  // 페이지 새로고침\r\n");
      out.write("	        };\r\n");
      out.write("        \r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<div class=\"wrap\">\r\n");
      out.write("	<div class=\"topArea\">\r\n");
      out.write("		<div class=\"title\">멤버십 결제</div>\r\n");
      out.write("		<button type=\"button\" class=\"btn-i-close\" onclick=\"payhide();\"></button>\r\n");
      out.write("	</div>\r\n");
      out.write("	<div class=\"cntArea\">\r\n");
      out.write("		<div class=\"btnWrap\">\r\n");
      out.write("			<input type=\"button\" class=\"btn-pay-nice\" onclick=\"nicePay()\" value=\"결제 버튼\">\r\n");
      out.write("			<input type=\"button\" class=\"btn-pay-kakao\" onclick=\"kakaoPay()\" value=\"카카오페이 결제 버튼\">\r\n");
      out.write("			<a href=\"#none\" class=\"btn-pay-toss\"></a>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<!--  <div class=\"wrap\">\r\n");
      out.write("    <div>결제 페이지</div>\r\n");
      out.write("    <div>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${UserVO.email }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</div>\r\n");
      out.write("    <input type=\"button\" id=\"naverPayBtn\" value=\"네이버페이 결제 버튼\">\r\n");
      out.write("    <input type=\"button\" onclick=\"kakaoPay()\" value=\"카카오페이 결제 버튼\">\r\n");
      out.write("    <input type=\"button\" value=\"토스 결제 버튼\">\r\n");
      out.write("</div>-->");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /WEB-INF/views/heartbeat/notice.jsp(48,9) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/heartbeat/notice.jsp(48,9) '${adminPost }'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${adminPost }",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /WEB-INF/views/heartbeat/notice.jsp(48,9) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("avo");
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("									<li class=\"item\">\r\n");
            out.write("										<div class=\"num\">	\r\n");
            out.write("										</div>\r\n");
            out.write("										 <a href=\"/notice/getPostOne?notice_id=");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${avo.notice_id }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("&num=");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${select }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\" class=\"tit\" style=\"color:red;\"> <i>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${avo.title }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</i>\r\n");
            out.write("										 <i>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${avo.nickname }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</i>\r\n");
            out.write("										</a>\r\n");
            out.write("									</li>\r\n");
            out.write("									");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f1 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f1_reused = false;
    try {
      _jspx_th_c_005fforEach_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f1.setParent(null);
      // /WEB-INF/views/heartbeat/notice.jsp(58,9) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/heartbeat/notice.jsp(58,9) '${userPost }'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${userPost }",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /WEB-INF/views/heartbeat/notice.jsp(58,9) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setVar("uvo");
      int[] _jspx_push_body_count_c_005fforEach_005f1 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f1 = _jspx_th_c_005fforEach_005f1.doStartTag();
        if (_jspx_eval_c_005fforEach_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("									<li class=\"item\">\r\n");
            out.write("										<div class=\"num\">\r\n");
            out.write("										</div> \r\n");
            out.write("										<a href=\"/notice/getPostOne?notice_id=");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${uvo.notice_id }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("&num=");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${select}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\"> <i>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${uvo.title }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</i>\r\n");
            out.write("										<i>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${uvo.nickname }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</i>\r\n");
            out.write("										</a>\r\n");
            out.write("									</li>\r\n");
            out.write("									");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f1.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f1[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f1.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f1.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f1);
      _jspx_th_c_005fforEach_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /WEB-INF/views/heartbeat/notice.jsp(69,9) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${page.prev }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("									<a href=\"/notice/notice?num=");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${page.startPageNum-1 }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\" class=\"btn-i-prev\"></a>\r\n");
          out.write("									");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f2 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fend_005fbegin.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f2_reused = false;
    try {
      _jspx_th_c_005fforEach_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f2.setParent(null);
      // /WEB-INF/views/heartbeat/notice.jsp(73,10) name = begin type = int reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f2.setBegin(((java.lang.Integer) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${page.startPageNum }", int.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).intValue());
      // /WEB-INF/views/heartbeat/notice.jsp(73,10) name = end type = int reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f2.setEnd(((java.lang.Integer) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${page.endPageNum }", int.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).intValue());
      // /WEB-INF/views/heartbeat/notice.jsp(73,10) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f2.setVar("num");
      int[] _jspx_push_body_count_c_005fforEach_005f2 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f2 = _jspx_th_c_005fforEach_005f2.doStartTag();
        if (_jspx_eval_c_005fforEach_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("										");
            if (_jspx_meth_c_005fif_005f1(_jspx_th_c_005fforEach_005f2, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f2))
              return true;
            out.write("\r\n");
            out.write("										");
            if (_jspx_meth_c_005fif_005f2(_jspx_th_c_005fforEach_005f2, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f2))
              return true;
            out.write("\r\n");
            out.write("										");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f2.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f2[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f2.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f2.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fend_005fbegin.reuse(_jspx_th_c_005fforEach_005f2);
      _jspx_th_c_005fforEach_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f2, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f2)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f1_reused = false;
    try {
      _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f2);
      // /WEB-INF/views/heartbeat/notice.jsp(74,10) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${select != num}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
      if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("										<a href=\"/notice/notice?num=");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${num }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\" class=\"num\">");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${num }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</a>\r\n");
          out.write("										");
          int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
      _jspx_th_c_005fif_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f2(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f2, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f2)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f2 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f2_reused = false;
    try {
      _jspx_th_c_005fif_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f2);
      // /WEB-INF/views/heartbeat/notice.jsp(77,10) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f2.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${select == num}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f2 = _jspx_th_c_005fif_005f2.doStartTag();
      if (_jspx_eval_c_005fif_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("										<a href=\"/notice/notice?num=");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${num }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\" class=\"num on\">");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${num }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</a>\r\n");
          out.write("										");
          int evalDoAfterBody = _jspx_th_c_005fif_005f2.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f2);
      _jspx_th_c_005fif_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f3(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f3 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f3_reused = false;
    try {
      _jspx_th_c_005fif_005f3.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f3.setParent(null);
      // /WEB-INF/views/heartbeat/notice.jsp(82,9) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f3.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${page.next }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f3 = _jspx_th_c_005fif_005f3.doStartTag();
      if (_jspx_eval_c_005fif_005f3 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("									<a href=\"/notice/notice?num=");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${page.endPageNum+1 }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\" class=\"btn-i-next\"></a>\r\n");
          out.write("									");
          int evalDoAfterBody = _jspx_th_c_005fif_005f3.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f3);
      _jspx_th_c_005fif_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f3, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f3_reused);
    }
    return false;
  }
}
